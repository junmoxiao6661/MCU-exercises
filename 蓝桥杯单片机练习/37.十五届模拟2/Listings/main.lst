C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 19:00:19 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "iic.h"
   3          #include "onewire.h"
   4          #include "key.h"
   5          #include "seg.h"
   6          #include "led.h"
   7          
   8          typedef unsigned char u8;
   9          typedef unsigned int u16;
  10          
  11          u8 kval,kslow,kdown,kold;
  12          u8 segslow,pos;
  13          u8 seg[8]={10,10,10,10,10,10,10,10};
  14          u8 pot[8]={0,0,0,0,0,0,0,0};
  15          u8 led[8]={0,0,0,0,0,0,0,0};
  16          u8 mode;
  17          float t;
  18          float ad;
  19          u8 lux;
  20          bit flag=0;
  21          void Key_Pro()
  22          {
  23   1              if(kslow) return;
  24   1              kslow=1;
  25   1              kval=Key_Read();
  26   1              kdown=kval&(kval^kold);
  27   1              kold=kval;
  28   1              
  29   1              switch(kdown)
  30   1              {
  31   2                      case 4:
  32   2                              if(flag==0)
  33   2                                      {if(++mode==2) mode=0;}
  34   2                              break;
  35   2                      case 5:
  36   2                              flag^=1;
  37   2                              break;
  38   2              }
  39   1              
  40   1      }
  41          
  42          void DA()
  43          {
  44   1              if(mode==0)
  45   1              {
  46   2                      if(t<=10)
  47   2                              ad=1;
  48   2                      else if(t>=40)
  49   2                              ad=5;
  50   2                      else
  51   2                              ad=0.1333*t-0.3333;
  52   2              }
  53   1              else if(mode==1)
  54   1              {
C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 19:00:19 PAGE 2   

  55   2                      if(lux<=10)
  56   2                              ad=1;
  57   2                      else if(lux>=240)
  58   2                              ad=5;
  59   2                      else
  60   2                              ad=0.0174*lux+0.8261;
  61   2              }
  62   1      }
  63          void Seg_Pro()
  64          {
  65   1              if(segslow) return;
  66   1              segslow=1;
  67   1              t=rd_t();
  68   1              lux=Ad_Read(0x41);
  69   1              if(mode==0&&!flag)
  70   1              {
  71   2                      seg[0]=1;
  72   2                      seg[5]=(u8)t/10;
  73   2                      seg[6]=(u8)t%10;
  74   2                      pot[6]=1;
  75   2                      seg[7]=(u16)(t*10)%10;
  76   2              }
  77   1              else if(mode==1&&!flag)
  78   1              {
  79   2                      seg[0]=2;
  80   2                      seg[5]=lux/100==0?10:lux/100;
  81   2                      seg[6]=lux/10%10==0&&lux/100==0?10:lux/10%10;
  82   2                      pot[6]=0;
  83   2                      seg[7]=lux%10;
  84   2              }
  85   1              else if(flag)
  86   1              {
  87   2                      DA();
  88   2                      seg[0]=11;
  89   2                      seg[5]=10;
  90   2                      seg[6]=(u8)ad%10;
  91   2                      pot[6]=1;
  92   2                      seg[7]=(u16)(ad*10)%10;
  93   2                      Da_Write((u8)(ad*51.0));
  94   2              }
  95   1              
  96   1      }
  97          
  98          void Led_Pro()
  99          {
 100   1              led[0]=(mode==0);
 101   1              led[1]=(mode==1);
 102   1      }
 103          void Timer0_Init(void)          //1毫秒@12.000MHz
 104          {
 105   1              AUXR &= 0x7F;                   //定时器时钟12T模式
 106   1              TMOD &= 0xF0;                   //设置定时器模式
 107   1              TL0 = 0x18;                             //设置定时初始值
 108   1              TH0 = 0xFC;                             //设置定时初始值
 109   1              TF0 = 0;                                //清除TF0标志
 110   1              TR0 = 1;                                //定时器0开始计时
 111   1              ET0=1;
 112   1              EA=1;
 113   1      }
 114          
 115          void Timer0_Service() interrupt 1
 116          {
C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 19:00:19 PAGE 3   

 117   1              if(++kslow==10) kslow=0;
 118   1              if(++segslow==500) segslow=0;
 119   1              if(++pos==8) pos=0;
 120   1              Seg_Display(pos,seg[pos],pot[pos]);
 121   1              Led_Display(pos,led[pos]);
 122   1      }
 123          void sysinit()
 124          {
 125   1              P0=0xff;
 126   1              P2=P2&0x1f|0x80;
 127   1              P2=P2&0x1f;
 128   1              
 129   1              P0=0x00;
 130   1              P2=P2&0x1f|0xa0;
 131   1              P2=P2&0x1f;
 132   1              
 133   1              
 134   1      }
 135          void Delay750ms()               //@12.000MHz
 136          {
 137   1              unsigned char i, j, k;
 138   1      
 139   1              i = 35;
 140   1              j = 51;
 141   1              k = 182;
 142   1              do
 143   1              {
 144   2                      do
 145   2                      {
 146   3                              while (--k);
 147   3                      } while (--j);
 148   2              } while (--i);
 149   1      }
 150          
 151          void main()
 152          {
 153   1              sysinit();
 154   1              rd_t();
 155   1              Delay750ms();
 156   1              Ad_Read(0x41);
 157   1              Timer0_Init();
 158   1              while(1)
 159   1              {
 160   2                      Key_Pro();
 161   2                      Seg_Pro();
 162   2                      Led_Pro();
 163   2              }
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    710    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
