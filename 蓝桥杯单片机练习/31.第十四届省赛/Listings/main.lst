C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2024 20:31:30 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "iic.h"
   3          #include "onewire.h"
   4          #include "ds1302.h"
   5          #include "key.h"
   6          #include "seg.h"
   7          #include "led.h"
   8          
   9          typedef unsigned char u8;
  10          typedef unsigned int u16;
  11          u8 kval,kdown,kslow,kold;
  12          u8 segslow,pos;
  13          u8 seg[8]={10,10,10,10,10,10,10,10};
  14          u8 pot[8]={0,0,0,0,0,0,0,0};
  15          u8 led[8]={0,0,0,0,0,0,0,0};
  16          u16 fre,fredelay;
  17          u8 mode,backmode,tempmode;
  18          u8 time[3]={0x18,0x20,0x00};
  19          float t,maxt,avt,tempt;
  20          float rh,maxrh,avrh,temprh;
  21          u16 sumt,sumrh;
  22          u8 cnt,hour,min;
  23          u8 rhcnt;
  24          u8 pt=30;
  25          u16 s9delay;
  26          bit flag=0;
  27          u8 light;
  28          bit lightflag=0;
  29          bit ledflag;
  30          u16 lightdelay;
  31          u8 leddelay;
  32          void Key_Pro()
  33          {
  34   1              if(kslow) return ;
  35   1              kslow=1;
  36   1              kval=Key_Read();
  37   1              kdown=kval&(kold^kval);
  38   1              kold=kval;
  39   1              switch(kdown)
  40   1              {
  41   2                      case 4:
  42   2                              if(++mode==3) mode=0;
  43   2                              break;
  44   2                      case 5:
  45   2                              if(mode==1)
  46   2                              {
  47   3                                      if(++backmode==3) backmode=0;
  48   3                              }
  49   2                              break;
  50   2                      case 8:
  51   2                              if(mode==2)
  52   2                              {
  53   3                                      if(++pt>=100) pt=99;
  54   3                              }
C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2024 20:31:30 PAGE 2   

  55   2                              break;
  56   2                      case 9:
  57   2                              if(mode==2)
  58   2                              {
  59   3                                      if(--pt==255) pt=0;
  60   3                              }
  61   2                              flag=1;
  62   2                              break;
  63   2              }
  64   1      
  65   1      }
  66          
  67          
  68          void Timer0_Init(void)          //100微秒@12.000MHz
  69          {
  70   1              AUXR &= 0x7F;                   //定时器时钟12T模式
  71   1              TMOD |= 0x05;                   //设置定时器模式
  72   1              TL0 = 0;                                //设置定时初始值
  73   1              TH0 = 0;                                //设置定时初始值
  74   1              TF0 = 0;                                //清除TF0标志
  75   1              TR0 = 1;                                //定时器0开始计时
  76   1              ET0=1;
  77   1      }
  78          void Timer1_Init(void)          //1毫秒@12.000MHz
  79          {
  80   1              AUXR &= 0xBF;                   //定时器时钟12T模式
  81   1              TMOD &= 0x0F;                   //设置定时器模式
  82   1              TL1 = 0x18;                             //设置定时初始值
  83   1              TH1 = 0xFC;                             //设置定时初始值
  84   1              TF1 = 0;                                //清除TF1标志
  85   1              TR1 = 1;                                //定时器1开始计时
  86   1              ET1=1;
  87   1              EA=1;
  88   1      }
  89          void rd_rh()
  90          {
  91   1              if(fre>=200&&fre<=2000)
  92   1              {
  93   2                      rh=0.0445*fre+1.1111;
  94   2              }
  95   1      }
  96          void Trigger()
  97          {
  98   1              light=Ad_Read(0x01);
  99   1              if(light<=150&&lightflag==0&&cnt<99)
 100   1              {
 101   2                      t=rd_t();
 102   2                      rd_rh();
 103   2                      cnt++;
 104   2                      lightflag=1;
 105   2                      tempmode=mode;
 106   2                      hour=time[0];
 107   2                      min=time[1];
 108   2                      tempt=t;
 109   2                      if(maxt<tempt)
 110   2                              maxt=tempt;
 111   2                      sumt+=tempt;
 112   2                      avt=sumt/(float)cnt;
 113   2                      if(fre>=200&&fre<=2000)
 114   2                      {
 115   3                              rhcnt++;
 116   3                              temprh=rh;
C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2024 20:31:30 PAGE 3   

 117   3                              if(maxrh<temprh)
 118   3                                      maxrh=temprh;
 119   3                              sumrh+=temprh;
 120   3                              avrh=sumrh/(float)rhcnt;
 121   3                      }
 122   2              }
 123   1      }
 124          
 125          void Seg_Pro()
 126          {
 127   1              if(segslow) return ;
 128   1              segslow=1;
 129   1              Trigger();
 130   1              Read_Rtc(time);
 131   1              switch(mode)
 132   1              {
 133   2                      case 0:
 134   2                              seg[0]=time[0]/16;// 16进制
 135   2                              seg[1]=time[0]%16;
 136   2                              seg[2]=11;
 137   2                              seg[3]=time[1]/16;
 138   2                              seg[4]=time[1]%16;
 139   2                              seg[5]=11;
 140   2                              seg[6]=time[2]/16;
 141   2                              seg[7]=time[2]%16;
 142   2                              pot[6]=0;
 143   2                              break;
 144   2                      case 1:
 145   2                              if(backmode==0)
 146   2                              {
 147   3                                      seg[0]=12;// 16进制
 148   3                                      seg[1]=10;
 149   3                                      if(cnt)
 150   3                                      {
 151   4                                              seg[2]=(u8)maxt/10;
 152   4                                              seg[3]=(u8)maxt%10;
 153   4                                              seg[4]=11;
 154   4                                              seg[5]=(u8)avt/10;
 155   4                                              seg[6]=(u8)avt%10;
 156   4                                              pot[6]=1;
 157   4                                              seg[7]=(u16)(avt*10)%10;
 158   4                                      }
 159   3                                      else
 160   3                                      {
 161   4                                              seg[2]=10;
 162   4                                              seg[3]=10;
 163   4                                              seg[4]=10;
 164   4                                              seg[5]=10;
 165   4                                              seg[6]=10;
 166   4                                              pot[6]=0;
 167   4                                              seg[7]=10;
 168   4                                      }
 169   3                                      
 170   3                              }
 171   2                              else if(backmode==1)
 172   2                              {
 173   3                                      seg[0]=13;// 16进制
 174   3                                      seg[1]=10;
 175   3                                      if(cnt)
 176   3                                      {
 177   4                                              seg[2]=(u8)maxrh/10;
 178   4                                              seg[3]=(u8)maxrh%10;
C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2024 20:31:30 PAGE 4   

 179   4                                              seg[4]=11;              
 180   4                                              seg[5]=(u8)avrh/10;
 181   4                                              seg[6]=(u8)avrh%10;
 182   4                                              pot[6]=1;
 183   4                                              seg[7]=(u16)(avrh*10)%10;
 184   4                                      }
 185   3                                      else
 186   3                                      {
 187   4                                              seg[2]=10;
 188   4                                              seg[3]=10;
 189   4                                              seg[4]=10;
 190   4                                              seg[5]=10;
 191   4                                              seg[6]=10;
 192   4                                              pot[6]=0;
 193   4                                              seg[7]=10;
 194   4                                      }
 195   3                              }
 196   2                              else if(backmode==2)
 197   2                              {
 198   3                                      seg[0]=14;
 199   3                                      seg[1]=cnt/10;
 200   3                                      seg[2]=cnt%10;
 201   3                                      pot[6]=0;
 202   3                                      if(cnt)
 203   3                                      {
 204   4                                              seg[3]=hour/16;
 205   4                                              seg[4]=hour%16;
 206   4                                              seg[5]=11;
 207   4                                              seg[6]=min/16;
 208   4                                              seg[7]=min%16;
 209   4                                      }
 210   3                                      else
 211   3                                      {
 212   4                                              seg[3]=10;
 213   4                                              seg[4]=10;
 214   4                                              seg[5]=10;
 215   4                                              seg[6]=10;
 216   4                                              seg[7]=10;
 217   4                                      }
 218   3                              }
 219   2                              break;
 220   2                      case 2:
 221   2                              seg[0]=15;
 222   2                              seg[1]=10;
 223   2                              seg[2]=10;
 224   2                              seg[3]=10;
 225   2                              seg[4]=10;
 226   2                              seg[5]=10;
 227   2                              seg[6]=pt/10;
 228   2                              seg[7]=pt%10;
 229   2                              pot[6]=0;
 230   2                              break;
 231   2                      case 4:
 232   2                              seg[0]=16;
 233   2                              seg[1]=10;
 234   2                              seg[2]=10;
 235   2                              pot[6]=0;
 236   2                              seg[3]=(u8)t/10;
 237   2                              seg[4]=(u8)t%10;
 238   2                              seg[5]=11;
 239   2                              if(fre>=200&&fre<=2000)
 240   2                              {
C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2024 20:31:30 PAGE 5   

 241   3                                      seg[6]=(u8)rh/10;
 242   3                                      seg[7]=(u8)rh%10;
 243   3                              }
 244   2                              else
 245   2                              {
 246   3                                      seg[6]=17;
 247   3                                      seg[7]=17;
 248   3                              }
 249   2                              break;
 250   2              }
 251   1      }
 252          
 253          void Led_Pro()
 254          {
 255   1              led[0]=(mode==0);
 256   1              led[1]=(mode==1);
 257   1              led[2]=(mode==4);
 258   1              if(tempt>pt) 
 259   1              {
 260   2                      ledflag=1;
 261   2                      if(leddelay==100)
 262   2                      {
 263   3                              led[3]=~led[3];
 264   3                              leddelay=0;
 265   3                      }
 266   2              }
 267   1              else 
 268   1              {
 269   2                      led[3]=0;
 270   2                      ledflag=0;
 271   2                      leddelay=0;
 272   2              }
 273   1              led[4]=(fre<200||fre>2000)&&(mode==4);
 274   1              led[5]=cnt>=2&&t>tempt&&rh>temprh;
 275   1      }
 276          void Timer_Service() interrupt 3
 277          {
 278   1              if(++kslow==10) kslow=0;
 279   1              if(++segslow==500) segslow=0;
 280   1              if(++pos==8) pos=0;
 281   1              Seg_Display(pos,seg[pos],pot[pos]);
 282   1              Led_Display(pos,led[pos]);
 283   1              if(++fredelay==1000)
 284   1              {
 285   2                      TR0=0;
 286   2                      fredelay=0;
 287   2                      fre=(TH0<<8)|TL0;
 288   2                      TL0=TH0=0;
 289   2                      TR0=1;
 290   2              }
 291   1              if(flag&&kval==9)
 292   1              {
 293   2                      if(++s9delay==2000)
 294   2                      {
 295   3                              s9delay=0;
 296   3                              flag=0;
 297   3                              cnt=0;
 298   3                              rhcnt=0;
 299   3                      }
 300   2              }
 301   1              else
 302   1              {
C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2024 20:31:30 PAGE 6   

 303   2                      flag=0;
 304   2                      s9delay=0;
 305   2              }
 306   1              if(lightflag)
 307   1              {
 308   2                      mode=4;
 309   2                      if(++lightdelay==3000)
 310   2                      {
 311   3                              lightflag=0;
 312   3                              lightdelay=0;
 313   3                              mode=tempmode;
 314   3                      }
 315   2              }
 316   1              if(ledflag)
 317   1              {
 318   2                      ++leddelay;
 319   2              }
 320   1      }
 321          void sysinit()
 322          {
 323   1              P0=0xff;
 324   1              P2=P2&0x1f|0x80;
 325   1              P2=P2&0x1f;
 326   1              
 327   1              P0=0x00;
 328   1              P2=P2&0x1f|0xa0;
 329   1              P2=P2&0x1f;
 330   1      }
 331          void main()
 332          {
 333   1              sysinit();
 334   1              rd_t();
 335   1              Ad_Read(0x01);
 336   1              Timer1_Init();
 337   1              Timer0_Init();  
 338   1              Set_Rtc(time);
 339   1              while(1)
 340   1              {
 341   2                      Led_Pro();
 342   2                      Key_Pro();
 343   2                      Seg_Pro();
 344   2                      
 345   2              }
 346   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1546    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     87    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
