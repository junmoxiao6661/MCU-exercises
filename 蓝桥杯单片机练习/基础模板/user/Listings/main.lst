C51 COMPILER V9.60.7.0   MAIN                                                              02/26/2024 10:41:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\driver) DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "key.h"
   3          #include "led.h"
   4          #include "seg.h"
   5          #include "iic.h"
   6          
   7          unsigned char pos;
   8          unsigned char kval,kdown,kup,kold;
   9          unsigned char key_slow;
  10          unsigned int seg_slow;
  11          unsigned char seg_buf[8]={10,10,10,10,10,10,10,10};
  12          unsigned char pot[8]={0,0,0,0,0,0,0,0};
  13          unsigned char uled[8]={0,0,0,0,0,0,0,0};
  14          
  15          
  16          unsigned char smg_mode;//0设置界面 1非设置界面
  17          unsigned char led_tier; //亮度等级 Rb2
  18          unsigned char liu_z[4]={400,400,400,400};//四个模式对应四个流转间隔
  19          unsigned char liu_set[4]={400,400,400,400};//设置流转间隔数据
  20          unsigned char index;//数组索引，加一对应四种模式
  21          unsigned char state;//0数码管熄灭 1模式 2流转间隔
  22          unsigned int ms400;//数码管闪烁时间
  23          bit smg_flag;//数码管闪烁标志位
  24          unsigned char dat[4];//专用数组 把数据保存到EEPROM
  25          
  26          void key_pro()
  27          {
  28   1              unsigned char i=0;
  29   1              
  30   1              if(key_slow)return;
  31   1              key_slow=1;
  32   1              
  33   1              kval=key_read();
  34   1              kdown=kval &(kold ^ kval);//判断按下
  35   1              kup=~kval &(kold ^ kval);//判断松手
  36   1              kold=kval;//判断长按
  37   1              switch(kdown)
  38   1              {
  39   2                      case 6:
  40   2                      
  41   2                              if(++state==3)
  42   2                                      state=0;
  43   2                              if(state==0) //退回初始界面保存数据
  44   2                              {
  45   3                                      index=0; //索引复位
  46   3                                      for(i=0;i<4;i++)
  47   3                                      {
  48   4                                      liu_set[i]=liu_z[i];
  49   4                                      dat[i]=liu_set[i]/100;//只能写0~255之间的数
  50   4                                      }
  51   3                                      eep_write(dat,0,4);//数组名 位置0(一定要为八的倍数) 4个数据 
  52   3                              }
  53   2                              break;
  54   2                              
C51 COMPILER V9.60.7.0   MAIN                                                              02/26/2024 10:41:54 PAGE 2   

  55   2                      case 5:         //加按键
  56   2                      
  57   2                                      if(state==1)//模式
  58   2                                      {
  59   3                                              if(++index==4)//0~3 索引值 
  60   3                                                      index=0;
  61   3                                      }
  62   2                                      else if(state==2)//流转间隔
  63   2                                      {
  64   3                                              liu_z[index] += 100; //一次加一百
  65   3                                              if(++liu_z[index]>1200)
  66   3                                                      liu_z[index]=1200; //卡住上限
  67   3                                      }
  68   2              
  69   2                              break;
  70   2                              
  71   2                              case 4:         //减按键
  72   2                      
  73   2                                      if(state==1)//模式
  74   2                                      {
  75   3                                              if(--index==255)//0~3 索引值 
  76   3                                                      index=3;
  77   3                                      }
  78   2                                      else if(state==2)//流转间隔
  79   2                                      {
  80   3                                              liu_z[index] -=100; //一次减一百
  81   3                                              if(--liu_z[index]<400)
  82   3                                                      liu_z[index]=400; //卡住上限
  83   3                                      }
  84   2                      
  85   2                              break;
  86   2                                      
  87   2              }
  88   1              
  89   1      }
  90          void seg_pro()
  91          {
  92   1              unsigned char i=0;
  93   1      
  94   1              if(seg_slow)return;
  95   1              seg_slow=1;
  96   1              
  97   1              led_tier=da_read(0x43)/64;//0，1，2，3级
  98   1              
  99   1              if(smg_mode==0)//设置模式下
 100   1              {
 101   2              seg_buf[0]=seg_buf[2]=11;//
 102   2              seg_buf[1]=index+1;
 103   2              
 104   2              seg_buf[4]=liu_z[index]/1000;
 105   2              seg_buf[5]=liu_z[index]/100%10;
 106   2              seg_buf[6]=liu_z[index]/10%10;
 107   2              seg_buf[7]=liu_z[index]%10;
 108   2                      
 109   2                      if(state==1)//模式编号闪烁
 110   2                      {
 111   3                              seg_buf[0]=smg_flag?10:11;//三目运算符 闪烁很好用
 112   3                              seg_buf[2]=smg_flag?10:11;
 113   3                              seg_buf[1]=smg_flag?10:index+1;
 114   3                      }
 115   2                      else if(state==2)//流转间隔闪烁
 116   2                      {
C51 COMPILER V9.60.7.0   MAIN                                                              02/26/2024 10:41:54 PAGE 3   

 117   3      
 118   3                      seg_buf[4]=smg_flag?10:liu_z[index]/1000;                               
 119   3                              seg_buf[4]=smg_flag?10:liu_z[index]/1000;
 120   3                              seg_buf[5]=smg_flag?10:liu_z[index]/100%10;
 121   3                              seg_buf[6]=smg_flag?10:liu_z[index]/10%10;
 122   3                              seg_buf[7]=smg_flag?10:liu_z[index]%10;
 123   3                      }
 124   2                      if(seg_buf[4]==0)seg_buf[4]=10;
 125   2                              
 126   2              }
 127   1              else //非设置界面
 128   1              {
 129   2                      for(i=0;i<6;i++)
 130   2              seg_buf[i]=10;//其他数码管熄灭
 131   2              seg_buf[6]=11;
 132   2              seg_buf[7]=led_tier;
 133   2              }
 134   1      }
 135          void led_pro()
 136          {
 137   1              
 138   1      }
 139          
 140          void Timer0Init(void)           //1毫秒@12.000MHz
 141          {
 142   1              AUXR &= 0x7F;           //定时器时钟12T模式
 143   1              TMOD &= 0xF0;           //设置定时器模式
 144   1              TL0 = 0x18;             //设置定时初值
 145   1              TH0 = 0xFC;             //设置定时初值
 146   1              TF0 = 0;                //清除TF0标志
 147   1              TR0 = 1;                //定时器0开始计时
 148   1              ET0=1;
 149   1              EA=1;
 150   1      }
 151          
 152          void Timer0s(void) interrupt 1
 153          {
 154   1              if(++key_slow==10)key_slow=0;
 155   1              if(++seg_slow==500)seg_slow=0;
 156   1              if(++pos==8)pos=0;
 157   1              
 158   1              LED_dis(pos,uled[pos]);
 159   1              
 160   1              if(state!=0)  //s6不为0数码管才亮 否则熄灭
 161   1                      seg_dis(pos,seg_buf[pos],pot[pos]);
 162   1              else
 163   1                      seg_dis(pos,10,0);
 164   1              
 165   1              
 166   1              
 167   1              if(++ms400 ==400)
 168   1              {
 169   2                      ms400=0;
 170   2                      smg_flag^=1;//400ms取反一下 达到闪烁效果
 171   2              }
 172   1      }       
 173          
 174          void sys_init()
 175          {
 176   1              P0=0xff;
 177   1              P2=P2&0x1f|0x80;
 178   1              P2&=0x1f;
C51 COMPILER V9.60.7.0   MAIN                                                              02/26/2024 10:41:54 PAGE 4   

 179   1              
 180   1              P0=0x00;
 181   1              P2=P2&0x1f|0xa0;
 182   1              P2&=0x1f;
 183   1      }
 184          
 185          void main()
 186          {       
 187   1              unsigned char i=0;
 188   1              sys_init();
 189   1              Timer0Init();
 190   1      //      eep_read(dat,0,4);
 191   1      //      
 192   1      //      for(i=0;i<4;i++)
 193   1      //              liu_z[i]=liu_set[i]=dat[i]*100;//把数据读出来 相当于把原来数据都刷新
 194   1              
 195   1              while(1)
 196   1              {
 197   2                      key_pro();
 198   2                      seg_pro();
 199   2                      led_pro();
 200   2              }
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    760    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
