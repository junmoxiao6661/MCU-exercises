C51 COMPILER V9.60.7.0   MAIN                                                              02/19/2024 23:57:43 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <INTRINS.H>
   3          
   4          typedef unsigned char u8;
   5          typedef unsigned int u16;
   6          //串口接受数据为中断模式
   7          //发送为查询模式
   8          void InitHC138(u8 n)
   9          {
  10   1              switch(n)
  11   1              {
  12   2                      case 4 : P2=(P2&0x1F)|0x80; break;
  13   2                      case 5 : P2=(P2&0x1F)|0xA0; break;
  14   2                      case 6 : P2=(P2&0x1F)|0xC0; break;
  15   2                      case 7 : P2=(P2&0x1F)|0xE0; break;
  16   2              }
  17   1      }
  18          void UartInit(void)             //9600bps@11.0592MHz
  19          {
  20   1              PCON &= 0x7F;           //波特率不倍速
  21   1              SCON = 0x50;            //8位数据,可变波特率
  22   1              AUXR &= 0xBF;           //定时器时钟12T模式
  23   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  24   1              TMOD &= 0x0F;           //设置定时器模式
  25   1              TMOD |= 0x20;           //设置定时器模式
  26   1              TL1 = 0xFD;                     //设置定时初始值
  27   1              TH1 = 0xFD;                     //设置定时重载值
  28   1              ET1 = 0;                        //禁止定时器中断
  29   1              TR1 = 1;                        //定时器1开始计时
  30   1              ES = 1; //串口中断
  31   1              EA = 1; //总中断
  32   1      }
  33          
  34          
  35          u8 command;
  36          void SendByte(u8 dat) //一个字节一个字节发送
  37          {
  38   1              SBUF=dat;//缓冲区
  39   1              while(TI==0); //TI=1发送完结束
  40   1              TI=0;//重置
  41   1      }
  42          
  43          void SendString(u8 *str)  //字符串就是一堆字符组成
  44          {
  45   1              while(*str!='\0')
  46   1              {
  47   2                      SendByte(*str++);
  48   2              }
  49   1              
  50   1      }
  51          void ServiceUart() interrupt 4
  52          {
  53   1              if(RI==1)
  54   1              {
C51 COMPILER V9.60.7.0   MAIN                                                              02/19/2024 23:57:43 PAGE 2   

  55   2                      command = SBUF; //接受外部数据
  56   2                      RI=0;
  57   2              }
  58   1      }
  59          
  60          void Working()
  61          {
  62   1              if(command!=0x00)
  63   1              {
  64   2                      switch(command & 0xF0)//提取前四位
  65   2                      {
  66   3                              case 0xA0:
  67   3                                      P0 = (P0|0x0F)&(~command|0xF0);
  68   3                                      command=0;
  69   3                                      break;
  70   3                              case 0xB0:
  71   3                                      P0 = (P0|0xF0)&((~command<<4)|0x0F);
  72   3                                      command=0;
  73   3                                      break;
  74   3                              case 0xC0:
  75   3                                      SendString("The System is Running...\n");
  76   3                                      command=0;
  77   3                                      break;
  78   3      
  79   3                      }
  80   2              }
  81   1      }
  82          void main()
  83          {
  84   1              InitHC138(5);
  85   1              P0=0x00; //蜂鸣器和继电器由达林顿管驱动，为高电平驱动
  86   1              InitHC138(4);
  87   1              P0=0xFF;
  88   1              UartInit();
  89   1              SendString("Welcome to XMF system！ \n");
  90   1              while(1)
  91   1              {
  92   2                       Working();
  93   2              }
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =     53    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
