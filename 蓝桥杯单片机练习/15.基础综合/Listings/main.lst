C51 COMPILER V9.60.7.0   MAIN                                                              02/21/2024 02:49:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          
   3          typedef unsigned char u8;
   4          typedef unsigned int u16;
   5          
   6          sbit S4 = P3^3;
   7          sbit S5 = P3^2;
   8          u8 code SMG[]= {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90, 0x88, 0x80, 0xc6, 0xc0, 0x86, 
             -0x8e,0xbf,0x7f};
   9          void InitHC138(u8 n)
  10          {
  11   1              switch(n)
  12   1              {
  13   2                      case 4: P2=(P2&0x1F)|0x80; break;
  14   2                      case 5: P2=(P2&0x1F)|0xA0; break;
  15   2                      case 6: P2=(P2&0x1F)|0xC0; break;
  16   2                      case 7: P2=(P2&0x1F)|0xE0; break;
  17   2                      case 0: P2=(P2&0x1F)|0x00; break;//锁存器不选择
  18   2              }
  19   1      }
  20                  
  21          void Delay(u16 xms)             //@12.000MHz
  22          {
  23   1              while(xms--)
  24   1              {
  25   2                      unsigned char i, j;
  26   2      
  27   2                      i = 2;
  28   2                      j = 239;
  29   2                      do
  30   2                      {
  31   3                              while (--j);
  32   3                      } while (--i);
  33   2              }
  34   1      }
  35          u8 count,sec,min,hour;
  36          
  37          
  38          void Timer0_Init(void)          //50毫秒@11.0592MHz
  39          {
  40   1              AUXR &= 0x7F;                   //定时器时钟12T模式
  41   1              TMOD &= 0xF0;                   //设置定时器模式
  42   1              TMOD |= 0x01;                   //设置定时器模式
  43   1              TL0 = 0x00;                             //设置定时初始值
  44   1              TH0 = 0x4C;                             //设置定时初始值
  45   1              TF0 = 0;                                //清除TF0标志
  46   1              TR0 = 1;                                //定时器0开始计时
  47   1              ET0 = 1;                                //使能定时器0中断
  48   1              EA = 1;
  49   1      }
  50          
  51          void Timer0_Isr(void) interrupt 1
  52          {
  53   1              TL0 = 0x00;                             //设置定时初始值
C51 COMPILER V9.60.7.0   MAIN                                                              02/21/2024 02:49:56 PAGE 2   

  54   1              TH0 = 0x4C;                             //设置定时初始值
  55   1              count++;
  56   1              if(count==20)
  57   1              {
  58   2                      count=0;
  59   2                      sec++;
  60   2              }
  61   1              if(sec==60)
  62   1              {
  63   2                      sec=0;
  64   2                      min++;
  65   2                      if(min==60)
  66   2                      {
  67   3                              min=0;
  68   3                              hour++;
  69   3                      }
  70   2              }
  71   1      }
  72          void UartInit(void)             //9600bps@11.0592MHz
  73          {
  74   1              PCON &= 0x7F;           //波特率不倍速
  75   1              SCON = 0x50;            //8位数据,可变波特率
  76   1              AUXR &= 0xBF;           //定时器时钟12T模式
  77   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  78   1              TMOD &= 0x0F;           //设置定时器模式
  79   1              TMOD |= 0x20;           //设置定时器模式
  80   1              TL1 = 0xFD;                     //设置定时初始值
  81   1              TH1 = 0xFD;                     //设置定时重载值
  82   1              ET1 = 0;
  83   1              TR1 = 1;
  84   1              ES = 1;
  85   1              EA = 1;
  86   1      }
  87          u8 command;
  88          
  89          
  90          void SendByte(u8 dat)
  91          {
  92   1              SBUF = dat;
  93   1              while(TI==0);
  94   1              TI=0;
  95   1      }
  96          void ServiceUart() interrupt 4
  97          {
  98   1              if(RI==1)
  99   1              {
 100   2                      command = SBUF;
 101   2                      RI=0;
 102   2              }
 103   1      }
 104          void ShowSMG(u8 value,u8 pos)
 105          {
 106   1              InitHC138(6);
 107   1              P0=(0x01<<pos);
 108   1              InitHC138(7);
 109   1              P0=value;
 110   1              Delay(2);
 111   1              P0=0xFF;//消影
 112   1      }
 113          void DisplayTime()
 114          {
 115   1              ShowSMG(SMG[hour/10],0);
C51 COMPILER V9.60.7.0   MAIN                                                              02/21/2024 02:49:56 PAGE 3   

 116   1              ShowSMG(SMG[hour%10],1);
 117   1              ShowSMG(SMG[16],2);
 118   1              ShowSMG(SMG[min/10],3);
 119   1              ShowSMG(SMG[min%10],4);
 120   1              ShowSMG(SMG[16],5);
 121   1              ShowSMG(SMG[sec/10],6);
 122   1              ShowSMG(SMG[sec%10],7);
 123   1      }
 124          
 125          void ExcuteCommand()
 126          {
 127   1              if(command!=0x00)
 128   1              {
 129   2                      switch(command&0xF0)
 130   2                      {
 131   3                              case 0xA0:
 132   3                                      InitHC138(4);
 133   3                                  P0=(P0|0x0F)&(~command|0xF0);
 134   3                                      InitHC138(0);
 135   3                                      command=0x00;
 136   3                                      break;
 137   3                              case 0xB0:
 138   3                                      SendByte((hour/10<<4)|(hour%10));
 139   3                                      SendByte((min/10<<4)|(min%10));
 140   3                                      SendByte((sec/10<<4)|(sec%10));
 141   3                                      command=0;
 142   3                                      break;
 143   3                                      
 144   3                      }
 145   2              }
 146   1      }
 147          void InitSystem()
 148          {
 149   1              InitHC138(5);
 150   1              P0=0x00;
 151   1              InitHC138(4);
 152   1              P0=0xFF;
 153   1              InitHC138(0);
 154   1      }
 155          void CheckLED()
 156          {
 157   1              u8 i;
 158   1              InitHC138(4);
 159   1              for(i=1;i<=8;i++)
 160   1              {
 161   2                      P0=0xFF<<i;
 162   2                      Delay(1000);
 163   2              }
 164   1              for(i=1;i<=8;i++)
 165   1              {
 166   2                      P0=~(0xFF<<i);
 167   2                      Delay(1000);
 168   2              }
 169   1              InitHC138(0);
 170   1      }
 171          void CheckSMG()
 172          {
 173   1              u8 i;
 174   1              InitHC138(7);
 175   1              P0=0x00;
 176   1              for(i=1;i<=8;i++)
 177   1              {
C51 COMPILER V9.60.7.0   MAIN                                                              02/21/2024 02:49:56 PAGE 4   

 178   2                      InitHC138(6);
 179   2                      P0=~(0xFF<<i);//哪个为1哪个亮
 180   2                      Delay(1000);
 181   2              }
 182   1              for(i=1;i<=8;i++)
 183   1              {
 184   2                      InitHC138(6);
 185   2                      P0=0xFF<<i;
 186   2                      Delay(1000);
 187   2              }
 188   1              InitHC138(0);
 189   1      }
 190          u8 stat_led=0xFF;
 191          void ScanKey()
 192          {
 193   1              if(S5==0)
 194   1              {
 195   2                      Delay(10);
 196   2                      DisplayTime();
 197   2                      if(S5==0)
 198   2                      {
 199   3                              while(S5==0)
 200   3                              {
 201   4                                      DisplayTime();
 202   4                              }
 203   3                              InitHC138(4);
 204   3                              stat_led=(stat_led | 0x40)&(~stat_led|0xbf);
 205   3                              P0=stat_led;
 206   3                              InitHC138(0);
 207   3                      }
 208   2              }
 209   1              if(S4==0)
 210   1              {
 211   2                      Delay(10);
 212   2                      DisplayTime();
 213   2                      if(S4==0)
 214   2                      {
 215   3                              while(S4==0)
 216   3                              {
 217   4                                      DisplayTime();
 218   4                              }
 219   3                              InitHC138(4);
 220   3                              stat_led=(stat_led | 0x80)&(~stat_led|0x7f);
 221   3                              P0=stat_led;
 222   3                              InitHC138(0);
 223   3                      }
 224   2              }
 225   1      }
 226          void main()
 227          {
 228   1              
 229   1              InitSystem();
 230   1              CheckLED();
 231   1              CheckSMG();
 232   1              Timer0_Init();
 233   1              UartInit();     
 234   1              SendByte(0x66);
 235   1              while(1)
 236   1              {
 237   2                      ExcuteCommand();
 238   2                      DisplayTime();
 239   2                      ScanKey();
C51 COMPILER V9.60.7.0   MAIN                                                              02/21/2024 02:49:56 PAGE 5   

 240   2              }
 241   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    696    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
